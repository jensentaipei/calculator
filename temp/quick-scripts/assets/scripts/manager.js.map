{"version":3,"sources":["manager.js"],"names":["cc","Class","extends","Component","properties","scoreDisplay","default","type","Label","button1","Button","score","number2","num2d","scored","add","sub","mul","divid","dot","first","sec","check","checkresult","testresult","percentchange","nagativechange","number","event","customEventData","ss","Number","string","ss1","s","a","s1","a1","addfun","parseFloat","toPrecision","POSITIVE_INFINITY","isNaN","subfun","multifun","dividfun","nagative","percent","dotfun","toString","includes","clear","backfun","substring","length","bbbbbbb","slice","aaaaaa","result","number1","start","update","dt"],"mappings":"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","file":"manager.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n    //#region Set\n    properties: {\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        button1: {\n            default: null,\n            type: cc.Button\n        },\n        score: {\n            default: 0,\n        },\n        number2: {\n            default: 0,\n        },\n        num2d: {\n            default: '0',\n        },\n        scored: {\n            default: '0',\n        },\n        add: {\n            default: false,\n        },\n        sub: {\n            default: false,\n        },\n        mul: {\n            default: false,\n        },\n        divid: {\n            default: false,\n        },\n        dot: {\n            default: false,\n        },\n        first: {\n            default: true,\n        },\n        sec: {\n            default: false,\n        },\n        check: {\n            default: true,\n        },\n        checkresult: {\n            default: false,\n        },\n        testresult: {\n            default: false,\n        },\n        percentchange: {\n            default: false,\n        },\n        nagativechange: {\n            default: false,\n        }\n        //#endregion\n    },\n    //#region EnterNumber\n    number: function (event, customEventData) {\n        if (this.testresult || this.percentchange || this.nagativechange) {\n            this.add = false;\n            this.sub = false;\n            this.mul = false;\n            this.divid = false;\n            this.dot = false;\n            this.check = true;\n            this.checkresult = false;\n            this.number2 = 0;\n            this.score = 0;\n            this.scored = '0';\n            this.num2d = '0';\n            this.first = true;\n            this.sec = false;\n            this.testresult = false;\n            this.percentchange = false;\n            this.nagativechange = false;\n        }\n        if (this.dot) {\n            if (!this.add && !this.sub && !this.mul && !this.divid)//&& this.score == 0)\n            {\n                this.first = true;\n                this.sec = false;\n                var ss = customEventData;\n                this.scored = this.scored + ss;\n                this.score = new Number(this.scored);\n                this.scoreDisplay.string = this.score;\n            }\n            else {\n                this.first = false;\n                this.sec = true;\n                var ss1 = customEventData;\n                this.num2d = this.num2d + ss1;\n                this.number2 = new Number(this.num2d);\n                this.scoreDisplay.string = this.number2;\n            }\n        }\n        else {\n            if (!this.add && !this.sub && !this.mul && !this.divid)//&& this.score == 0)\n            {\n                this.first = true;\n                this.sec = false;\n                var s = customEventData;\n                var a = new Number(s);\n                this.score = this.score * 10 + a;\n                this.scoreDisplay.string = this.score;\n            }\n            else {\n                this.first = false;\n                this.sec = true;\n                var s1 = customEventData;\n                var a1 = new Number(s1);\n                this.number2 = this.number2 * 10 + a1;\n                this.scoreDisplay.string = this.number2;\n            }\n        }\n    },\n    //#endregion\n\n    //#region CalculateFunction\n    addfun: function () {\n        this.add = true;\n        this.sub = false;\n        this.mul = false;\n        this.divid = false;\n        this.dot = false;\n        this.testresult = false;\n        this.percentchange = false;\n        this.nagativechange = false;\n        /////\n        this.checkresult = false;\n        this.score = this.score + this.number2;\n        this.number2 = 0;\n        this.score = parseFloat(this.score.toPrecision(12));\n        this.scoreDisplay.string = this.score;\n        if (this.score === Number.POSITIVE_INFINITY || this.score === -Number.POSITIVE_INFINITY\n            || isNaN(this.score)) {\n            this.scoreDisplay.string = \"不是數字\";\n            this.testresult = true;\n        }\n\n    },\n\n    subfun: function () {\n        this.add = false;\n        this.sub = true;\n        this.mul = false;\n        this.divid = false;\n        this.dot = false;\n        this.testresult = false;\n        this.percentchange = false;\n        this.nagativechange = false;\n        /////\n        this.checkresult = false;\n        this.score = this.score - this.number2;\n        this.number2 = 0;\n        this.score = parseFloat(this.score.toPrecision(12));\n        this.scoreDisplay.string = this.score;\n        if (this.score === Number.POSITIVE_INFINITY || this.score === -Number.POSITIVE_INFINITY\n            || isNaN(this.score)) {\n            this.scoreDisplay.string = \"不是數字\";\n            this.testresult = true;\n        }\n    },\n\n    multifun: function () {\n        this.add = false;\n        this.sub = false;\n        this.mul = true;\n        this.divid = false;\n        this.dot = false;\n        this.testresult = false;\n        this.percentchange = false;\n        this.nagativechange = false;\n        /////\n        if (this.check || this.checkresult) {\n            this.score = this.score;\n            this.check = false;\n            this.checkresult = false;\n        }\n        else {\n            this.score = this.score * this.number2;\n            this.number2 = 0;\n        }\n        this.score = parseFloat(this.score.toPrecision(12));\n        this.scoreDisplay.string = this.score;\n        if (this.score === Number.POSITIVE_INFINITY || this.score === -Number.POSITIVE_INFINITY\n            || isNaN(this.score)) {\n            this.scoreDisplay.string = \"不是數字\";\n            this.testresult = true;\n        }\n    },\n\n    dividfun: function () {\n        this.add = false;\n        this.sub = false;\n        this.mul = false;\n        this.divid = true;\n        this.dot = false;\n        this.testresult = false;\n        this.percentchange = false;\n        this.nagativechange = false;\n        /////\n        if (this.check || this.checkresult) {\n            this.score = this.score;\n            this.check = false;\n            this.checkresult = false;\n        }\n        else {\n            this.score = this.score / this.number2;\n            this.number2 = 0;\n        }\n        this.score = parseFloat(this.score.toPrecision(12));\n        this.scoreDisplay.string = this.score;\n        if (this.score === Number.POSITIVE_INFINITY || this.score === -Number.POSITIVE_INFINITY\n            || isNaN(this.score)) {\n            this.scoreDisplay.string = \"不是數字\";\n            this.testresult = true;\n        }\n    },\n\n    nagative: function () {\n        this.testresult = false;\n        this.nagativechange = true;\n        if (this.sec)//!this.number2 == 0)\n        {\n            this.number2 = -this.number2;\n            this.scoreDisplay.string = this.number2;\n        }\n        else if (this.first)//!this.score == 0)\n        {\n            this.score = -this.score;\n            this.scoreDisplay.string = this.score;\n        }\n        if (this.score === Number.POSITIVE_INFINITY || this.score === -Number.POSITIVE_INFINITY\n            || isNaN(this.score)) {\n            this.scoreDisplay.string = \"不是數字\";\n            this.testresult = true;\n        }\n    },\n\n    percent: function () {\n        this.testresult = false;\n        this.percentchange = true;\n        if (this.sec)//!this.number2 == 0)\n        {\n            this.number2 = this.number2 / 100;\n            this.number2 = parseFloat(this.number2.toPrecision(12));\n            this.scoreDisplay.string = this.number2;\n        }\n        else if (this.first)//!this.score == 0)\n        {\n            this.score = this.score / 100;\n            this.score = parseFloat(this.score.toPrecision(12));\n            this.scoreDisplay.string = this.score;\n        }\n        if (this.score === Number.POSITIVE_INFINITY || this.score === -Number.POSITIVE_INFINITY\n            || isNaN(this.score)) {\n            this.scoreDisplay.string = \"不是數字\";\n            this.testresult = true;\n        }\n    },\n\n    dotfun: function () {\n        if (this.testresult) {\n            this.add = false;\n            this.sub = false;\n            this.mul = false;\n            this.divid = false;\n            this.dot = false;\n            this.check = true;\n            this.checkresult = false;\n            this.number2 = 0;\n            this.score = 0;\n            this.scored = '0';\n            this.num2d = '0';\n            this.first = true;\n            this.sec = false;\n            this.testresult = false;\n        }\n        if (!this.dot) {\n            if (this.sec)//!this.number2 == 0)\n            {\n                this.num2d = this.number2.toString();\n                if (this.num2d.includes(\".\")) { }\n                else {\n                    this.num2d = this.num2d + '.';\n                    this.scoreDisplay.string = this.num2d;\n                }\n            }\n            else if (this.first)//!this.score == 0)\n            {\n                this.scored = this.score.toString();\n                if (this.scored.includes(\".\")) { }\n                else {\n                    this.scored = this.scored + '.';\n                    this.scoreDisplay.string = this.scored;\n                }\n            }\n            this.dot = true;\n        }\n    },\n\n    clear: function () {\n        this.add = false;\n        this.sub = false;\n        this.mul = false;\n        this.divid = false;\n        this.dot = false;\n        this.check = true;\n        this.checkresult = false;\n        this.number2 = 0;\n        this.score = 0;\n        this.scored = '0';\n        this.num2d = '0';\n        this.first = true;\n        this.sec = false;\n        this.nagativechange = false;\n        this.percentchange = false;\n        this.scoreDisplay.string = this.score;\n    },\n\n    backfun: function () {\n        if (this.sec)//!this.number2 == 0)\n        {\n            this.num2d = this.number2.toString();\n            this.num2d = this.num2d.substring(0, this.num2d.length - 1);\n            if (this.num2d.includes(\".\")) {\n                this.dot = true;\n            }\n            else {\n                this.dot = false;\n                if (this.num2d == 0) {\n                    this.num2d = '0';\n                }\n            }\n            if (this.num2d == '-') {\n                this.num2d = '0';\n            }\n            var bbbbbbb=this.num2d.slice(-1);\n            if(bbbbbbb=='.')\n            {\n                this.dot=false;\n            }\n            this.number2 = new Number(this.num2d);\n            this.scoreDisplay.string = this.number2;\n        }\n        else if (this.first)//!this.score == 0)\n        {\n            this.scored = this.score.toString();\n            this.scored = this.scored.substring(0, this.scored.length - 1);\n            if (this.scored.includes(\".\")) {\n                this.dot = true;\n            }\n            else {\n                this.dot = false;\n                if (this.scored == 0) {\n                    this.scored = '0';\n                }\n            }\n            if (this.scored == '-') {\n                this.scored = '0';\n            }\n            var aaaaaa=this.scored.slice(-1);\n            if(aaaaaa=='.')\n            {\n                this.dot=false;\n            }\n            this.score = new Number(this.scored);\n            this.scoreDisplay.string = this.score;\n        }\n        //if (this.score === Number.POSITIVE_INFINITY || this.score === -Number.POSITIVE_INFINITY\n        //   || isNaN(this.score)) {\n        //   this.scoreDisplay.string = \"不是數字\";\n        //   this.testresult = true;\n    },\n\n    //#endregion\n\n    //#region  Result\n    result: function () {\n        if (this.add) {\n            this.score = this.score + this.number2;\n            this.add = false;\n        }\n        else if (this.sub) {\n            this.score = this.score - this.number2;\n            this.sub = false;\n        }\n        else if (this.mul) {\n            this.score = this.score * this.number2;\n            this.mul = false;\n        }\n        else if (this.divid) {\n            this.score = this.score / this.number2;\n            this.divid = false;\n        }\n        this.score = parseFloat(this.score.toPrecision(12));\n        this.scoreDisplay.string = this.score;\n        if (this.score === Number.POSITIVE_INFINITY || this.score === -Number.POSITIVE_INFINITY\n            || isNaN(this.score)) {\n            this.scoreDisplay.string = \"不是數字\";\n        }\n        this.number1 = this.score;\n        this.number2 = 0;\n        this.scored = '0';\n        this.num2d = '0';\n        this.sec = false;\n        this.first = true;\n        this.testresult = true;\n        this.checkresult = true;\n    },\n    //#endregion\n\n    start() {\n        this.add = false;\n        this.sub = false;\n        this.mul = false;\n        this.divid = false;\n        this.dot = false;\n        this.first = true;\n        this.sec = false;\n        //////////\n        this.check = true;\n        this.checkresult = false;\n        this.testresult = false;\n        this.percentchange = false;\n        this.nagativechange = false;\n    },\n\n    update: function (dt) {\n\n    },\n});\n"]}